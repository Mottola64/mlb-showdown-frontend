{"version":3,"sources":["assets/images/angels.svg","assets/images/diamondbacks.svg","assets/images/braves.svg","assets/images/orioles.svg","assets/images/red-sox.svg","assets/images/cubs.svg","assets/images/white-sox.svg","assets/images/reds.svg","assets/images/indians.svg","assets/images/rockies.svg","assets/images/tigers.svg","assets/images/marlins.svg","assets/images/astros.svg","assets/images/royals.svg","assets/images/dodgers.svg","assets/images/brewers.svg","assets/images/twins.svg","assets/images/nationals.svg","assets/images/mets.svg","assets/images/yankees.svg","assets/images/athletics.svg","assets/images/phillies.svg","assets/images/pirates.svg","assets/images/padres.svg","assets/images/giants.svg","assets/images/mariners.svg","assets/images/cardinals.svg","assets/images/devil-rays.svg","assets/images/rangers.svg","assets/images/blue-jays.svg","components/NavBar.js","components/SearchBar.js","data/pictures.js","components/Pitchers.js","actions/addPlayerToDeck.js","components/SelectedPlayers.js","actions/addDeck.js","components/LoadingSpinner.js","containers/PitchersContainer.js","actions/fetchPitchers.js","components/Batters.js","containers/BattersContainer.js","actions/fetchBatters.js","components/Rules.js","components/Home.js","components/Deck.js","components/Decks.js","containers/DecksContainer.js","actions/fetchDecks.js","actions/deleteDeck.js","App.js","reducers/batters.js","reducers/pitchers.js","reducers/selectedPlayers.js","reducers/decks.js","index.js"],"names":["module","exports","NavBar","Navbar","className","light","expand","NavbarBrand","href","Nav","navbar","NavItem","NavLink","tag","RRNavLink","to","SearchBar","state","query","onInputChange","e","props","handleSearchChange","setState","target","value","InputGroup","size","padding","width","Input","type","this","onChange","InputGroupAddon","addonType","InputGroupText","React","Component","teamPictures","Angels","angels","Diamondbacks","diamondbacks","Braves","braves","Orioles","orioles","redsox","Cubs","cubs","whitesox","Reds","reds","Indians","indians","Rockies","rockies","Tigers","tigers","Marlins","marlins","Astros","astros","Royals","royals","Dodgers","dodgers","Brewers","brewers","Twins","twins","Expos","nationals","Mets","mets","Yankees","yankees","Athletics","athletics","Phillies","phillies","Pirates","pirates","Giants","giants","Mariners","mariners","Cardinals","cardinals","devilrays","Rangers","rangers","bluejays","Padres","padres","Pitchers","pitchers","formatTeamClassname","name","toLowerCase","replace","console","log","prevProps","searchType","CardColumns","filter","pitch","attributes","full_name","includes","map","pitcher","Card","key","id","team","CardBody","CardHeader","top","CardImg","src","style","height","alt","CardSubtitle","CardText","year_id","points","control","position","Button","onClick","addPlayer","addPlayerToDeck","player","payload","SelectedPlayers","renderPlayer","addtoDeck","event","preventDefault","batter_ids","selectedPlayers","batters","batter","pitcher_ids","data","deck","input","addDeck","formUpdate","bind","Table","hover","Form","inline","onSubmit","FormGroup","placeholder","connect","dispatch","fetch","headers","Accept","method","body","JSON","stringify","then","response","json","LoadingSpinner","Spinner","marginTop","PitchersContainer","fetchPitchers","length","backgroundColor","Batters","bat","onbase","starting_position","fielding_one","starting_position_two","BattersContainer","fetchBatters","Rules","marginLeft","marginRight","Home","Jumbotron","fluid","Container","Deck","renderBatter","renderPitcher","deleteDeck","Decks","decks","DecksContainer","fetchDecks","reload","reducer","combineReducers","action","currentState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","myStore","createStore","applyMiddleware","thunk","logger","App","store","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da245ebf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/angels.9fdfe050.svg\";","module.exports = __webpack_public_path__ + \"static/media/diamondbacks.fac71a45.svg\";","module.exports = __webpack_public_path__ + \"static/media/braves.f8e235f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/orioles.a8ea0ea1.svg\";","module.exports = __webpack_public_path__ + \"static/media/red-sox.17204282.svg\";","module.exports = __webpack_public_path__ + \"static/media/cubs.18535f11.svg\";","module.exports = __webpack_public_path__ + \"static/media/white-sox.c60c968d.svg\";","module.exports = __webpack_public_path__ + \"static/media/reds.ef69c269.svg\";","module.exports = __webpack_public_path__ + \"static/media/indians.67a9ef6d.svg\";","module.exports = __webpack_public_path__ + \"static/media/rockies.9cba6063.svg\";","module.exports = __webpack_public_path__ + \"static/media/tigers.976f1d6b.svg\";","module.exports = __webpack_public_path__ + \"static/media/marlins.ea6ccf47.svg\";","module.exports = __webpack_public_path__ + \"static/media/astros.4d978639.svg\";","module.exports = __webpack_public_path__ + \"static/media/royals.c33f5038.svg\";","module.exports = __webpack_public_path__ + \"static/media/dodgers.c44055c8.svg\";","module.exports = __webpack_public_path__ + \"static/media/brewers.e89fdd72.svg\";","module.exports = __webpack_public_path__ + \"static/media/twins.631c1945.svg\";","module.exports = __webpack_public_path__ + \"static/media/nationals.f05b248e.svg\";","module.exports = __webpack_public_path__ + \"static/media/mets.4fdf2a22.svg\";","module.exports = __webpack_public_path__ + \"static/media/yankees.85a2a80f.svg\";","module.exports = __webpack_public_path__ + \"static/media/athletics.47e1ff0d.svg\";","module.exports = __webpack_public_path__ + \"static/media/phillies.db147b3f.svg\";","module.exports = __webpack_public_path__ + \"static/media/pirates.ae1140fa.svg\";","module.exports = __webpack_public_path__ + \"static/media/padres.a60f8f1c.svg\";","module.exports = __webpack_public_path__ + \"static/media/giants.2fa1f86c.svg\";","module.exports = __webpack_public_path__ + \"static/media/mariners.1e39954f.svg\";","module.exports = __webpack_public_path__ + \"static/media/cardinals.7e5701fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/devil-rays.74faff7f.svg\";","module.exports = __webpack_public_path__ + \"static/media/rangers.239b09be.svg\";","module.exports = __webpack_public_path__ + \"static/media/blue-jays.a2fc20de.svg\";","import React from \"react\";\nimport { NavLink as RRNavLink } from \"react-router-dom\";\nimport \"../index.css\";\nimport { Navbar, NavbarBrand, Nav, NavItem, NavLink } from \"reactstrap\";\n\nconst NavBar = () => {\n  return (\n    <Navbar className=\"navbar\" light expand=\"lg\">\n      <NavbarBrand href=\"/\">MLB Showdown</NavbarBrand>\n\n      <Nav className=\"mr-auto \" navbar>\n        <NavItem>\n          <NavLink tag={RRNavLink} to=\"/batters\">\n            Batters\n          </NavLink>\n        </NavItem>\n        <NavLink tag={RRNavLink} to=\"/pitchers\">\n          Pitchers\n        </NavLink>\n        <NavItem>\n          <NavLink tag={RRNavLink} to=\"/decks\">\n            Decks\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink tag={RRNavLink} to=\"/rules\">\n            Rules\n          </NavLink>\n        </NavItem>\n      </Nav>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { InputGroup, InputGroupAddon, InputGroupText, Input } from \"reactstrap\";\n\nclass SearchBar extends React.Component {\n  state = {\n    query: \"\",\n  };\n\n  onInputChange = (e) => {\n    this.props.handleSearchChange(e);\n    this.setState({\n      query: e.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"search\">\n        <InputGroup size=\"md\" padding=\"20px\" width=\"50%\">\n          <Input\n            type=\"text\"\n            value={this.state.query}\n            onChange={this.onInputChange}\n          />\n          <InputGroupAddon addonType=\"append\">\n            <InputGroupText className=\"mb-2 mr-sm-2 mb-sm-0\">\n              Search\n            </InputGroupText>\n          </InputGroupAddon>\n        </InputGroup>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import angels from \"../assets/images/angels.svg\";\nimport diamondbacks from \"../assets/images/diamondbacks.svg\";\nimport braves from \"../assets/images/braves.svg\";\nimport orioles from \"../assets/images/orioles.svg\";\nimport redsox from \"../assets/images/red-sox.svg\";\nimport cubs from \"../assets/images/cubs.svg\";\nimport whitesox from \"../assets/images/white-sox.svg\";\nimport reds from \"../assets/images/reds.svg\";\nimport indians from \"../assets/images/indians.svg\";\nimport rockies from \"../assets/images/rockies.svg\";\nimport tigers from \"../assets/images/tigers.svg\";\nimport marlins from \"../assets/images/marlins.svg\";\nimport astros from \"../assets/images/astros.svg\";\nimport royals from \"../assets/images/royals.svg\";\nimport dodgers from \"../assets/images/dodgers.svg\";\nimport brewers from \"../assets/images/brewers.svg\";\nimport twins from \"../assets/images/twins.svg\";\nimport nationals from \"../assets/images/nationals.svg\";\nimport mets from \"../assets/images/mets.svg\";\nimport yankees from \"../assets/images/yankees.svg\";\nimport athletics from \"../assets/images/athletics.svg\";\nimport phillies from \"../assets/images/phillies.svg\";\nimport pirates from \"../assets/images/pirates.svg\";\nimport padres from \"../assets/images/padres.svg\";\nimport giants from \"../assets/images/giants.svg\";\nimport mariners from \"../assets/images/mariners.svg\";\nimport cardinals from \"../assets/images/cardinals.svg\";\nimport devilrays from \"../assets/images/devil-rays.svg\";\nimport rangers from \"../assets/images/rangers.svg\";\nimport bluejays from \"../assets/images/blue-jays.svg\";\n\nconst teamPictures = {\n  Angels: angels,\n\n  Diamondbacks: diamondbacks,\n  Braves: braves,\n  Orioles: orioles,\n  \"Red Sox\": redsox,\n  Cubs: cubs,\n  \"White Sox\": whitesox,\n  Reds: reds,\n  Indians: indians,\n  Rockies: rockies,\n  Tigers: tigers,\n  Marlins: marlins,\n  Astros: astros,\n  Royals: royals,\n  Dodgers: dodgers,\n  Brewers: brewers,\n  Twins: twins,\n  Expos: nationals,\n  Mets: mets,\n  Yankees: yankees,\n  Athletics: athletics,\n  Phillies: phillies,\n  Pirates: pirates,\n  Giants: giants,\n  Mariners: mariners,\n  Cardinals: cardinals,\n  \"Devil Rays\": devilrays,\n  Rangers: rangers,\n  \"Blue Jays\": bluejays,\n  Padres: padres,\n};\n\nexport default teamPictures;\n","import React from \"react\";\nimport {\n  Card,\n  Button,\n  CardImg,\n  CardHeader,\n  CardText,\n  CardColumns,\n  CardSubtitle,\n  CardBody,\n} from \"reactstrap\";\nimport SearchBar from \"../components/SearchBar\";\nimport teamPictures from \"../data/pictures\";\n\nclass Pitchers extends React.Component {\n  state = {\n    pitchers: this.props.pitchers,\n    query: null,\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      this.setState({\n        pitchers: this.props.pitchers,\n      });\n    }\n  }\n\n  formatTeamClassname = (name) => name.toLowerCase().replace(\" \", \"-\");\n\n  handleSearchChange = (e) => {\n    console.log(e.target.value);\n    this.setState({\n      query: e.target.value,\n    });\n  };\n\n  render() {\n    const filterPitchers = () => {\n      if (this.state.query) {\n        return this.state.pitchers.filter((pitch) => {\n          return pitch.attributes.full_name\n            .toLowerCase()\n            .includes(this.state.query.toLowerCase());\n        });\n      } else {\n        return this.state.pitchers;\n      }\n    };\n\n    return (\n      <div>\n        <SearchBar\n          searchType=\"pitchers\"\n          handleSearchChange={this.handleSearchChange}\n        />\n        <CardColumns>\n          {this.state.pitchers &&\n            filterPitchers().map((pitcher) => {\n              const { attributes } = pitcher;\n              return (\n                <Card\n                  key={attributes.id}\n                  className={`${this.formatTeamClassname(\n                    attributes.team\n                  )} list-group-item `}\n                >\n                  <CardBody>\n                    <CardHeader className=\"text-center\" top width=\"100%\">\n                      <strong>{attributes.full_name}</strong>\n                    </CardHeader>\n                    <div>\n                      <CardImg\n                        top\n                        src={teamPictures[attributes.team]}\n                        style={{\n                          width: \"40%\",\n                          height: \"40%\",\n                        }}\n                        alt=\"Card image cap\"\n                      />\n                    </div>\n                    <br></br>\n\n                    <CardSubtitle>{attributes.team}</CardSubtitle>\n                    <br></br>\n                    <CardText>Year: {attributes.year_id}</CardText>\n                    <CardText>Pts: {attributes.points}</CardText>\n                    <CardText>Control: {attributes.control}</CardText>\n                    <CardText>Position: {attributes.position}</CardText>\n                    <Button onClick={() => this.props.addPlayer(pitcher)}>\n                      Add Pitcher To Deck\n                    </Button>\n                  </CardBody>\n                </Card>\n              );\n            })}\n        </CardColumns>\n      </div>\n    );\n  }\n}\nexport default Pitchers;\n","export default function addPlayerToDeck(player) {\n  return {\n    type: \"ADD_SELECTED_PLAYER\",\n    payload: player,\n  };\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Table,\n  InputGroupAddon,\n  InputGroupText,\n} from \"reactstrap\";\nimport { addDeck } from \"../actions/addDeck\";\n\nclass SelectedPlayers extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { input: \"\" };\n    this.formUpdate = this.formUpdate.bind(this);\n  }\n\n  formUpdate(event) {\n    this.setState({ input: event.target.value });\n  }\n\n  renderPlayer = (attributes) => (\n    <tr key={attributes.id}>\n      <td>{attributes.full_name}</td>\n      <td>{attributes.team}</td>\n      <td>{attributes.points}</td>\n    </tr>\n  );\n\n  addtoDeck = (event) => {\n    event.preventDefault();\n    const batter_ids = this.props.selectedPlayers.batters.map(\n      (batter) => batter.id\n    );\n    const pitcher_ids = this.props.selectedPlayers.pitchers.map(\n      (pitcher) => pitcher.id\n    );\n    const data = {\n      deck: {\n        name: this.state.input,\n        batter_ids: batter_ids,\n        pitcher_ids: pitcher_ids,\n      },\n    };\n    console.log(data);\n    this.props.addDeck(data);\n  };\n\n  render() {\n    return (\n      <div>\n        <Table hover>\n          <thead>\n            <tr>Selected Batters</tr>\n            <tr>\n              <th>Name</th>\n              <th>Team</th>\n              <th>Points</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.selectedPlayers &&\n              this.props.selectedPlayers.batters.map(({ attributes }) =>\n                this.renderPlayer(attributes)\n              )}\n          </tbody>\n        </Table>\n        <Table hover>\n          <thead>\n            <tr>Selected Pitchers</tr>\n            <tr>\n              <th>Name</th>\n              <th>Team</th>\n              <th>Points</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.selectedPlayers &&\n              this.props.selectedPlayers.pitchers.map(({ attributes }) =>\n                this.renderPlayer(attributes)\n              )}\n          </tbody>\n        </Table>\n\n        <Form\n          inline\n          className=\"search\"\n          onSubmit={(event) => this.addtoDeck(event)}\n        >\n          <FormGroup>\n            <InputGroupAddon addonType=\"prepend\">\n              <InputGroupText>Deck Name</InputGroupText>\n            </InputGroupAddon>\n            <Input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Deck Name\"\n              value={this.state.input}\n              onChange={this.formUpdate}\n            />\n          </FormGroup>\n          <Button type=\"submit\">Save</Button>\n        </Form>\n        <br></br>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { addDeck })(SelectedPlayers);\n","export const addDeck = (data) => {\n  return (dispatch) => {\n    fetch(\"http://localhost:3000/api/v1/decks\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      method: \"POST\",\n      body: JSON.stringify(data),\n    })\n      .then((response) => response.json())\n      .then((deck) => dispatch({ type: \"ADD_DECK\", payload: deck }));\n  };\n};\n","import React from \"react\";\nimport { Spinner } from \"reactstrap\";\n\nconst LoadingSpinner = (props) => {\n  return (\n    <Spinner style={{ width: \"10rem\", height: \"10rem\", marginTop: \"30%\" }} />\n  );\n};\n\nexport default LoadingSpinner;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchPitchers } from \"../actions/fetchPitchers\";\nimport Pitchers from \"../components/Pitchers\";\nimport addPlayerToDeck from \"../actions/addPlayerToDeck\";\nimport SelectedPlayers from \"../components/SelectedPlayers\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\n\nclass PitchersContainer extends React.Component {\n  componentDidMount() {\n    this.props.fetchPitchers();\n  }\n\n  render() {\n    if (this.props.pitchers.length === 0) {\n      return (\n        <div\n          className=\"justify-content-center d-flex\"\n          style={{ backgroundColor: \"white\" }}\n        >\n          <LoadingSpinner />\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          {this.props.selectedPlayers.pitchers.length > 0 && (\n            <SelectedPlayers selectedPlayers={this.props.selectedPlayers} />\n          )}\n          <Pitchers\n            pitchers={this.props.pitchers}\n            addPlayer={this.props.addPlayerToDeck}\n          />\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    pitchers: state.pitchers,\n    selectedPlayers: state.selectedPlayers,\n  };\n};\n\nexport default connect(mapStateToProps, { fetchPitchers, addPlayerToDeck })(\n  PitchersContainer\n);\n","export function fetchPitchers() {\n  return (dispatch) => {\n    fetch(\"http://localhost:3000/api/v1/pitchers\")\n      .then((response) => response.json())\n      .then((pitchers) =>\n        dispatch({\n          type: \"FETCH_PITCHERS\",\n          payload: pitchers.data,\n        })\n      );\n  };\n}\n","import React from \"react\";\nimport {\n  Card,\n  Button,\n  CardImg,\n  CardHeader,\n  CardText,\n  CardColumns,\n  CardSubtitle,\n  CardBody,\n} from \"reactstrap\";\nimport SearchBar from \"../components/SearchBar\";\nimport teamPictures from \"../data/pictures\";\n\nclass Batters extends React.Component {\n  state = {\n    batters: this.props.batters,\n    query: null,\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      this.setState({\n        batters: this.props.batters,\n      });\n    }\n  }\n\n  formatTeamClassname = (name) => name.toLowerCase().replace(\" \", \"-\");\n\n  handleSearchChange = (e) => {\n    console.log(e.target.value);\n    this.setState({\n      query: e.target.value,\n    });\n  };\n\n  render() {\n    const filterBatters = () => {\n      if (this.state.query) {\n        return this.state.batters.filter((bat) => {\n          return bat.attributes.full_name\n            .toLowerCase()\n            .includes(this.state.query.toLowerCase());\n        });\n      } else {\n        return this.state.batters;\n      }\n    };\n\n    return (\n      <div>\n        <SearchBar\n          searchType=\"batters\"\n          handleSearchChange={this.handleSearchChange}\n        />\n        <CardColumns>\n          {this.state.batters &&\n            filterBatters().map((batter) => {\n              const { attributes } = batter;\n              return (\n                <Card\n                  key={attributes.id}\n                  className={`${this.formatTeamClassname(\n                    attributes.team\n                  )} list-group-item `}\n                >\n                  <CardBody>\n                    <CardHeader className=\"text-center\" width=\"100%\">\n                      <strong>{attributes.full_name}</strong>\n                    </CardHeader>\n                    <br></br>\n                    <CardSubtitle>{attributes.team}</CardSubtitle>\n                    <div>\n                      <CardImg\n                        top\n                        src={teamPictures[attributes.team]}\n                        style={{\n                          width: \"40%\",\n                          height: \"40%\",\n                        }}\n                        alt=\"Card image cap\"\n                      />\n                    </div>\n                    <br></br>\n                    <CardText>Year: {attributes.year_id}</CardText>\n                    <CardText>Pts: {attributes.points}</CardText>\n                    <CardText>Onbase: {attributes.onbase}</CardText>\n                    <CardText>\n                      Position: {attributes.starting_position}+\n                      {attributes.fielding_one}\n                    </CardText>\n                    <CardText>\n                      Position:{\" \"}\n                      {attributes.starting_position_two !== \"NULL\" &&\n                        attributes.starting_position_two}\n                    </CardText>\n                    {/* <CardText>Position: {batter.starting_position_three}-{batter.fielding_three}</CardText>\n<CardText>Position: {batter.starting_position_four}-{batter.fielding_four}</CardText> */}\n                    <Button onClick={() => this.props.addPlayer(batter)}>\n                      Add Batter To Deck\n                    </Button>\n                  </CardBody>\n                </Card>\n              );\n            })}\n        </CardColumns>\n      </div>\n    );\n  }\n}\nexport default Batters;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchBatters } from \"../actions/fetchBatters\";\nimport Batters from \"../components/Batters\";\nimport addPlayerToDeck from \"../actions/addPlayerToDeck\";\nimport SelectedPlayers from \"../components/SelectedPlayers\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\n\nclass BattersContainer extends React.Component {\n  componentDidMount() {\n    this.props.fetchBatters();\n  }\n\n  render() {\n    if (this.props.batters.length === 0) {\n      return (\n        <div\n          className=\"justify-content-center d-flex\"\n          style={{ backgroundColor: \"white\" }}\n        >\n          <LoadingSpinner />\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          {this.props.selectedPlayers.batters.length > 0 && (\n            <SelectedPlayers selectedPlayers={this.props.selectedPlayers} />\n          )}\n          <Batters\n            batters={this.props.batters}\n            addPlayer={this.props.addPlayerToDeck}\n          />\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    batters: state.batters,\n    selectedPlayers: state.selectedPlayers,\n  };\n};\n\nexport default connect(mapStateToProps, { fetchBatters, addPlayerToDeck })(\n  BattersContainer\n);\n","export function fetchBatters() {\n  return (dispatch) => {\n    fetch(\"http://localhost:3000/api/v1/batters\")\n      .then((response) => response.json())\n      .then((batters) =>\n        dispatch({\n          type: \"FETCH_BATTERS\",\n          payload: batters.data,\n        })\n      );\n  };\n}\n","import React from \"react\";\nimport \"../index.css\";\n\nconst Rules = () => {\n  return (\n    <div\n      style={{\n        backgroundColor: \"white\",\n        marginLeft: \"20px\",\n        marginRight: \"20px\",\n        padding: \"15px\",\n      }}\n    >\n      <h1 className=\"h1\">Welcome To MLB Showdown</h1>\n      <br></br>\n\n      <h2 className=\"h2\">What Is MLB Showdown?</h2>\n      <p>\n        MLB Showdown was a strategy card game that put you in the owner's box\n        and the manager's seat. Every move is yours to make, from creating a\n        starting lineup and bringing in a relief pitcher to calling for a steal\n        and trading players. It's just like the real Major Leagues.\n      </p>\n      <br></br>\n\n      <h2 className=\"h2\">General Concept Of The Game</h2>\n      <ul>\n        Two players play out the nine innings of a Major League Baseball game\n        with teams from the starter deck.\n      </ul>\n      <ul>\n        A \"team\" consists of at least nine \"players\" that fill in all of the\n        field positions and at least two \"pitchers\" with a 20-card strategy\n        deck.\n      </ul>\n      <ul>\n        Your goal is to score more runs than your opponent does in nine innings.\n      </ul>\n      <br></br>\n\n      <h2 className=\"h2\">Getting Started</h2>\n      <ul>\n        Open up the playmat and look at the layout, familiarizing yourself with\n        the locations of all the cards during play. Lay the player cards on the\n        playmat in their respective places, in whatever order you choose, and\n        the pitchers in the bullpen. Your strategy deck goes to the left of the\n        first batter.\n      </ul>\n      <ul>\n        Your starting hand size is three. You can have as many cards in hand as\n        you want.\n      </ul>\n      <ul>\n        Each player draws a card at the beginning of each half inning, including\n        the top of the first (in other words, every time there is a switch\n        between offense and defense).\n      </ul>\n      <ul>\n        Determine who goes first. Flipping a coin is the traditional method. Or,\n        roll the 20-sided die (high roll goes first).\n      </ul>\n      <br></br>\n\n      <h2 className=\"h2\">Play The Game!</h2>\n      <ul>\n        Player one puts forward the batter, and player two puts his or her\n        pitcher in the middle of the field.\n      </ul>\n      <br></br>\n\n      <h3 className=\"h3\">Step 1: The Pitch!</h3>\n      <ul>\n        The pitcher's player rolls the 20-sided die and adds the die roll to the\n        Control of the pitcher.\n      </ul>\n      <ul>\n        If the result is greater then the On-Base value of the hitter, then the\n        pitcher made a good pitch.\n      </ul>\n      <ul>\n        If the result is less than or equal to the On-Base value of the hitter,\n        the pitcher made a bad pitch (for him at least).\n      </ul>\n      <br></br>\n\n      <h3 className=\"h3\">Step 2: The Swing!</h3>\n      <ul>\n        The player on offense then rolls the 20-sided die to see the results. If\n        the pitch was good (die + Control is greater than hitter's On-Base),\n        look for the results on the pitcher's chart in the lower right-hand\n        corner of the card.\n      </ul>\n      <ul>\n        If the pitch was bad, then look for the swing result on the batter's\n        chart.\n      </ul>\n      <ul>\n        If the batter gets on base, move his card to the appropriate base. If\n        the batter makes an \"out,\" put the card back in the player's lineup spot\n        and flip the card over to help you remember that the player is out. If\n        the offensive team gets three \"outs,\" the pitcher's team comes up to\n        bat.\n      </ul>\n      <ul>\n        Once both teams have made three outs, the inning is over and the\n        original hitting team continues with the next player from the lineup.\n      </ul>\n      <br></br>\n\n      <h2>The Strategy Cards</h2>\n      <ul>\n        Offensive (red) and Defensive (blue) cards can be used when you are on\n        the offense or the defense, respectively. The cards tell you when you\n        can play them and what they do to affect the game.\n      </ul>\n      <ul>\n        Utility Cards can be played when you are on either defense or offense.\n        As above, the cards tell you when you can use them and how they affect\n        the game.\n      </ul>\n    </div>\n  );\n};\n\nexport default Rules;\n","import React from \"react\";\nimport { Jumbotron, Container } from \"reactstrap\";\n\nconst Home = (props) => {\n  return (\n    <div>\n      <Jumbotron fluid>\n        <Container fluid>\n          <h1 className=\"display-3 text-center\">MLB Showdown</h1>\n          <p className=\"lead text-center\">\n            Welcome To MLB Showdown! Check out the cards from the 2000 and 2001\n            MLB Showdown sets, and build your own deck for the next time you\n            face your friends!\n          </p>\n        </Container>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Table, Button } from \"reactstrap\";\n\nconst Deck = (props) => {\n  const renderBatter = (batter) => (\n    <tr key={batter.id}>\n      <td></td>\n      <td>{batter.full_name}</td>\n      <td>{batter.team}</td>\n      <td>{batter.starting_position}</td>\n      <td>{batter.points}</td>\n    </tr>\n  );\n\n  const renderPitcher = (pitcher) => (\n    <tr key={pitcher.id}>\n      <td></td>\n      <td>{pitcher.full_name}</td>\n      <td>{pitcher.team}</td>\n      <td>{pitcher.position}</td>\n      <td>{pitcher.points}</td>\n    </tr>\n  );\n\n  const deck = props.deck;\n\n  return (\n    <div>\n      <Table key={deck.id} hover>\n        <thead>\n          <tr>\n            <th>{deck.name}</th>\n            <th>Name</th>\n            <th>Team</th>\n            <th>Position</th>\n            <th>Points</th>\n          </tr>\n        </thead>\n        <tbody>\n          {deck.batters.map((batter) => renderBatter(batter))}\n          {deck.pitchers.map((pitcher) => renderPitcher(pitcher))}\n        </tbody>\n      </Table>\n      <Button onClick={() => props.deleteDeck(deck.id)}>Delete Deck</Button>\n    </div>\n  );\n};\n\nexport default Deck;\n","import React from \"react\";\nimport Deck from \"./Deck\";\n\nclass Decks extends React.Component {\n  render() {\n    return (\n      <div>\n        {this.props.decks.map((deck) => (\n          <Deck key={deck.id} deck={deck} deleteDeck={this.props.deleteDeck} />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Decks;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchDecks } from \"../actions/fetchDecks\";\nimport Decks from \"../components/Decks\";\nimport { deleteDeck } from \"../actions/deleteDeck\";\n\nclass DecksContainer extends React.Component {\n\n  componentDidMount() {\n    this.props.fetchDecks();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.decks !== this.props.decks) {\n      this.setState({\n        reload: true,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.decks.decks.length > 0 && (\n          <Decks\n            decks={this.props.decks.decks}\n            deleteDeck={this.props.deleteDeck}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    decks: state.decks,\n  };\n};\n\nexport default connect(mapStateToProps, { fetchDecks, deleteDeck })(\n  DecksContainer\n);\n","export function fetchDecks() {\n  return (dispatch) => {\n    fetch(\"http://localhost:3000/api/v1/decks\")\n      .then((response) => response.json())\n      .then((decks) =>\n        dispatch({\n          type: \"FETCH_DECKS\",\n          payload: decks,\n        })\n      );\n  };\n}\n","export function deleteDeck(id) {\n  return (dispatch) => {\n    return fetch(`http://localhost:3000/api/v1/decks/${id}`, {\n      method: \"DELETE\",\n    }).then((decks) => dispatch({ type: \"DELETE_DECK\", payload: decks }));\n  };\n}\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport NavBar from \"./components/NavBar\";\nimport PitchersContainer from \"./containers/PitchersContainer\";\nimport BattersContainer from \"./containers/BattersContainer\";\nimport Rules from \"./components/Rules\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport thunk from \"redux-thunk\";\nimport batters from \"./reducers/batters\";\nimport pitchers from \"./reducers/pitchers\";\nimport decks from \"./reducers/decks\";\nimport selectedPlayers from \"./reducers/selectedPlayers\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport logger from \"redux-logger\";\nimport Home from \"./components/Home\";\nimport \"./index.css\";\nimport DecksContainer from \"./containers/DecksContainer\";\n\nconst reducer = combineReducers({\n  batters,\n  pitchers,\n  selectedPlayers,\n  decks\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nlet myStore = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(thunk, logger))\n);\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"mlb\">\n        <Provider store={myStore} className=\"App\">\n          <Router>\n            <NavBar />\n            \n            {/* <BattersContainer /> */}\n            {/* <PitchersContainer /> */}\n            <Switch>\n              <Route path=\"/batters\" component={BattersContainer} />\n              <Route path=\"/pitchers\" component={PitchersContainer} />\n              <Route path=\"/decks\" component={DecksContainer} />\n              <Route path=\"/rules\" component={Rules} />\n              <Route exact path=\"/\" component={Home} />\n            </Switch>\n          </Router>\n        </Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export default function batters(state = [], action) {\n  switch (action.type) {\n    case \"FETCH_BATTERS\":\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","export default function pitchers(state = [], action) {\n  switch (action.type) {\n    case \"FETCH_PITCHERS\":\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","export default function selectedPlayers(\n  state = { batters: [], pitchers: [] },\n  action\n) {\n  switch (action.type) {\n    case \"ADD_SELECTED_PLAYER\":\n      const currentState = { ...state };\n      action.payload.type === \"batter\"\n        ? (currentState.batters = [\n            ...state.batters,\n            action.payload\n          ])\n        : (currentState.pitchers = [\n            ...state.pitchers,\n            action.payload\n          ]);\n\n      return currentState;\n\n    default:\n      return state;\n  }\n}\n","export default function decks(state = { decks: [] }, action) {\n  switch (action.type) {\n    case \"FETCH_DECKS\":\n      return { decks: action.payload };\n    case \"ADD_DECK\":\n      return { decks: [...state.decks, action.payload] };\n    case \"DELETE_DECK\":\n      return { decks: action.payload };\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}